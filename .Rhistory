m_markov_trace <- calculate_state_occupancy_markov_model(
p_side_effects_t1,
p_side_effects_t2,
p_home_home, p_home_hospital, p_home_recover,
p_hospital_hospital, p_hospital_recover, p_hospital_dead)
m_markov_trace
debug(calculate_costs_effects)
### Run the Model
source("04_analysis/01_model_run.R")
debug(calculate_costs_effects)
### Generate the parameters for the PSA
n_psa_size <- 5000
m_params <- generate_psa_parameters(n_psa_size)
### Run the model
m_costs_effects <- array(NA, dim = c(n_psa_size, 2, 2))
for(s in 1:n_psa_size){
v_params <- m_params[s, ]
m_costs_effects[s, , ] <- do.call(calculate_costs_effects,
v_params[names(formals(calculate_costs_effects))])
}
m_markov_trace
### Run the Model
source("04_analysis/01_model_run.R")
### Mean costs and effects
mean_costs_effects <- apply(m_costs_effects, c(2, 3), mean)
mean_costs_effects
### Mean costs and effects
mean_costs_effects <- apply(m_costs_effects, c(2, 3), mean)
### Run the Model
source("04_analysis/01_model_run.R")
### Mean costs and effects
mean_costs_effects <- apply(m_costs_effects, c(2, 3), mean)
mean_costs_effects
m_params
betapars
# Lambda_home: Conditional probability that a patient recovers considering
# that they are not hospitalised
betapars <- betaPar(0.45, 0.02)
betapars
lambda_home <- rbeta(n, betapars$alpha, betapars$beta)
n<-1000
lambda_home <- rbeta(n, betapars$alpha, betapars$beta)
mean(lambda_home)
# Lambda_hosp: Conditional probability that a patient recovers considering
# that they do not die
betapars <- betaPar(0.03, 0.0065)
lambda_hosp <- rbeta(n, betapars$alpha, betapars$beta)
### Run the Model
source("04_analysis/01_model_run.R")
### Mean costs and effects
mean_costs_effects <- apply(m_costs_effects, c(2, 3), mean)
mean_costs_effects
apply(m_params, 2, mean)
round(apply(m_params, 2, mean),2)
## Variables to define transition probabilities
# Probability that a patient is hospitalised over the time horizon
p_hospitalised_total <- rbeta(n,
1 + n_hospitalised,
1 + n_side_effects - n_hospitalised)
n< 1000
n<- 1000
## Variables to define transition probabilities
# Probability that a patient is hospitalised over the time horizon
p_hospitalised_total <- rbeta(n,
1 + n_hospitalised,
1 + n_side_effects - n_hospitalised)
p_hospitalised_total
1 - (1 - p_hospitalised_total) ^ (1 / time_horizon)
(1 - lambda_home) * (1 - p_home_hospital)
lambda_home <- rbeta(n, betapars$alpha, betapars$beta)
# that they are not hospitalised
betapars <- betaPar(0.21, 0.03)
lambda_home <- rbeta(n, betapars$alpha, betapars$beta)
# Lambda_hosp: Conditional probability that a patient recovers considering
# that they do not die
betapars <- betaPar(0.03, 0.0065)
lambda_hosp <- rbeta(n, betapars$alpha, betapars$beta)
p_home_home <- (1 - lambda_home) * (1 - p_home_hospital)
## Transition Probabilities
p_home_hospital <- 1 - (1 - p_hospitalised_total) ^ (1 / time_horizon)
(1 - lambda_home)
p_home_home <- (1 - lambda_home) * (1 - p_home_hospital)
p_home_home
### Run the Model
source("04_analysis/01_model_run.R")
### Run the Model
source("04_analysis/01_model_run.R")
### Mean costs and effects
mean_costs_effects <- apply(m_costs_effects, c(2, 3), mean)
mean_costs_effects
### Incremental Cost-Effectiveness Ratio (ICER)
ICER <- mean(m_costs_effects[, 1, 2] - m_costs_effects[, 2, 2]) /
mean(m_costs_effects[, 1, 1] - m_costs_effects[, 2, 1])
ICER
### Cost-Effectiveness Acceptability Curve
colours <- rainbow_hcl(12)
m_max <- apply(m_net_benefit, c(1,3), which.max)
plot(wtp_seq, apply(m_max == 2, 2, mean), type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness for Treatment 2",
main = "Cost Effectiveness Acceptability Curve")
### Cost-Effectiveness Acceptability Frontier
m_ceaf <- cbind(apply(m_max == 1, 2, mean), apply(m_max == 2, 2, mean))
plot(wtp_seq, m_ceaf[, 2], type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness",
main = "Cost Effectiveness Acceptability Frontier")
points(wtp_seq, m_ceaf[, 1], type = "l", col = colours[7], lwd = 3)
v_optimal_treatment <- apply(apply(m_net_benefit, c(2,3), mean), 2, which.max)
v_ceaf <- vector(length = n_wtp)
for(i in 1:n_wtp){
v_ceaf[i] <- m_ceaf[i, v_optimal_treatment[i]]
}
points(wtp_seq, v_ceaf, pch = 19, cex = 0.5)
points(wtp_seq, v_ceaf, pch = 0)
legend("bottomright", c("Treatment 1", "Treatment 2", "Frontier"),
lwd = c(2, 2, NA), pch = c(NA, NA, 0),
col = c(colours[1], colours[7], "black"))
dev.off()
### Packages
library(colorspace)
### Run the Model
source("04_analysis/01_model_run.R")
### Mean costs and effects
mean_costs_effects <- apply(m_costs_effects, c(2, 3), mean)
mean_costs_effects
### Incremental Cost-Effectiveness Ratio (ICER)
ICER <- mean(m_costs_effects[, 1, 2] - m_costs_effects[, 2, 2]) /
mean(m_costs_effects[, 1, 1] - m_costs_effects[, 2, 1])
ICER
### Cost-Effectiveness Acceptability Curve
colours <- rainbow_hcl(12)
m_max <- apply(m_net_benefit, c(1,3), which.max)
plot(wtp_seq, apply(m_max == 2, 2, mean), type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness for Treatment 2",
main = "Cost Effectiveness Acceptability Curve")
### Baseline willingness to pay = 20000
baseline_wtp <- which(wtp_seq == 20000)
# Average net benefit
mean_net_benefit <- apply(m_net_benefit[, , baseline_wtp], 2, mean)
mean_net_benefit
names(mean_net_benefit) <- c("Treatment 1", "Treatment 2")
write.csv(tab_mean_costs_effects, "07_tables/Mean_Net_Benefit.csv")
# Optimal treatment
d_star <-  which.max(mean_net_benefit)
d_star
################################################################################
#### Baseline Results for Chemotherapy Model
################################################################################
### Packages
library(colorspace)
### Run the Model
source("04_analysis/01_model_run.R")
### Mean costs and effects
mean_costs_effects <- apply(m_costs_effects, c(2, 3), mean)
write.csv(tab_mean_costs_effects, "07_tables/Mean_Costs_Effects.csv")
### Incremental Cost-Effectiveness Ratio (ICER)
ICER <- mean(m_costs_effects[, 1, 2] - m_costs_effects[, 2, 2]) /
mean(m_costs_effects[, 1, 1] - m_costs_effects[, 2, 1])
ICER
write.csv(ICER, "07_tables/ICER.csv")
### Cost-Effectiveness Acceptability Curve
colours <- rainbow_hcl(12)
m_max <- apply(m_net_benefit, c(1,3), which.max)
pdf("06_figs/CEAC.pdf")
plot(wtp_seq, apply(m_max == 2, 2, mean), type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness for Treatment 2",
main = "Cost Effectiveness Acceptability Curve")
dev.off()
### Cost-Effectiveness Acceptability Frontier
m_ceaf <- cbind(apply(m_max == 1, 2, mean), apply(m_max == 2, 2, mean))
pdf("06_figs/CEAF.pdf")
plot(wtp_seq, m_ceaf[, 2], type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness",
main = "Cost Effectiveness Acceptability Frontier")
points(wtp_seq, m_ceaf[, 1], type = "l", col = colours[7], lwd = 3)
v_optimal_treatment <- apply(apply(m_net_benefit, c(2,3), mean), 2, which.max)
v_ceaf <- vector(length = n_wtp)
for(i in 1:n_wtp){
v_ceaf[i] <- m_ceaf[i, v_optimal_treatment[i]]
}
points(wtp_seq, v_ceaf, pch = 19, cex = 0.5)
points(wtp_seq, v_ceaf, pch = 0)
legend("bottomright", c("Treatment 1", "Treatment 2", "Frontier"),
lwd = c(2, 2, NA), pch = c(NA, NA, 0),
col = c(colours[1], colours[7], "black"))
dev.off()
### Baseline willingness to pay = 20000
baseline_wtp <- which(wtp_seq == 20000)
# Average net benefit
mean_net_benefit <- apply(m_net_benefit[, , baseline_wtp], 2, mean)
mean_net_benefit
names(mean_net_benefit) <- c("Treatment 1", "Treatment 2")
write.csv(mean_net_benefit, "07_tables/Mean_Net_Benefit.csv")
# Optimal treatment
d_star <-  which.max(mean_net_benefit)
d_star
library(brm)
library(brms)
install.packages("brm")
library(brm)
?brmsformula
?brmaformula
?brmsformula
?get_prior
library(brms)
install.packages("brms")
library(brms)
rgamma(1000,7,7)
?brm
################################################################################
#### Baseline Results for Chemotherapy Model
################################################################################
### Packages
library(colorspace)
### Run the Model
source("04_analysis/01_model_run.R")
### Mean costs and effects
mean_costs_effects <- apply(m_costs_effects, c(2, 3), mean)
write.csv(tab_mean_costs_effects, "07_tables/Mean_Costs_Effects.csv")
### Incremental Cost-Effectiveness Ratio (ICER)
ICER <- mean(m_costs_effects[, 1, 2] - m_costs_effects[, 2, 2]) /
mean(m_costs_effects[, 1, 1] - m_costs_effects[, 2, 1])
ICER
write.csv(ICER, "07_tables/ICER.csv")
### Cost-Effectiveness Acceptability Curve
colours <- rainbow_hcl(12)
m_max <- apply(m_net_benefit, c(1,3), which.max)
pdf("06_figs/CEAC.pdf")
plot(wtp_seq, apply(m_max == 2, 2, mean), type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness for Treatment 2",
main = "Cost Effectiveness Acceptability Curve")
dev.off()
### Cost-Effectiveness Acceptability Frontier
m_ceaf <- cbind(apply(m_max == 1, 2, mean), apply(m_max == 2, 2, mean))
pdf("06_figs/CEAF.pdf")
plot(wtp_seq, m_ceaf[, 2], type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness",
main = "Cost Effectiveness Acceptability Frontier")
points(wtp_seq, m_ceaf[, 1], type = "l", col = colours[7], lwd = 3)
v_optimal_treatment <- apply(apply(m_net_benefit, c(2,3), mean), 2, which.max)
v_ceaf <- vector(length = n_wtp)
for(i in 1:n_wtp){
v_ceaf[i] <- m_ceaf[i, v_optimal_treatment[i]]
}
points(wtp_seq, v_ceaf, pch = 19, cex = 0.5)
points(wtp_seq, v_ceaf, pch = 0)
legend("bottomright", c("Treatment 1", "Treatment 2", "Frontier"),
lwd = c(2, 2, NA), pch = c(NA, NA, 0),
col = c(colours[1], colours[7], "black"))
dev.off()
### Baseline willingness to pay = 20000
baseline_wtp <- which(wtp_seq == 20000)
# Average net benefit
mean_net_benefit <- apply(m_net_benefit[, , baseline_wtp], 2, mean)
mean_net_benefit
names(mean_net_benefit) <- c("Treatment 1", "Treatment 2")
write.csv(mean_net_benefit, "07_tables/Mean_Net_Benefit.csv")
# Optimal treatment
d_star <-  which.max(mean_net_benefit)
d_star
write.csv(mean_costs_effects, "07_tables/Mean_Costs_Effects.csv")
write.csv(mean_costs_effects, "07_tables/Mean_Costs_Effects.csv")
mean_costs_effects
ICER
plot(wtp_seq, apply(m_max == 2, 2, mean), type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness for Treatment 2",
main = "Cost Effectiveness Acceptability Curve")
plot(wtp_seq, m_ceaf[, 2], type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness",
main = "Cost Effectiveness Acceptability Frontier")
points(wtp_seq, m_ceaf[, 1], type = "l", col = colours[7], lwd = 3)
v_optimal_treatment <- apply(apply(m_net_benefit, c(2,3), mean), 2, which.max)
v_ceaf <- vector(length = n_wtp)
for(i in 1:n_wtp){
v_ceaf[i] <- m_ceaf[i, v_optimal_treatment[i]]
}
points(wtp_seq, v_ceaf, pch = 19, cex = 0.5)
points(wtp_seq, v_ceaf, pch = 0)
legend("bottomright", c("Treatment 1", "Treatment 2", "Frontier"),
lwd = c(2, 2, NA), pch = c(NA, NA, 0),
col = c(colours[1], colours[7], "black"))
### Baseline willingness to pay = 20000
baseline_wtp <- which(wtp_seq == 20000)
baseline_wtp
mean_net_benefit
# Optimal treatment
d_star <-  which.max(mean_net_benefit)
d_star
rm(list = ls())
set.seed(123)
### Load the Inputs
source("02_data/01_data_inputs.R")
source("02_data/02_Assumption_Inputs.R")
### Load the Functions
source("03_R/01_misc_functions.R")
source("03_R/02_model_functions.R")
# Lambda_home: Conditional probability that a patient recovers considering
# that they are not hospitalised
betapars <- betaPar(0.21, 0.03)
betapars$alpha
betapars$beta
sqrt(0.001)
rm(list = ls())
set.seed(123)
### Load the Inputs
source("02_data/01_data_inputs.R")
source("02_data/02_Assumption_Inputs.R")
### Load the Functions
source("03_R/01_misc_functions.R")
source("03_R/02_model_functions.R")
### Generate the parameters for the PSA
n_psa_size <- 5000
m_params <- generate_psa_parameters(n_psa_size)
### Run the model
m_costs_effects <- array(NA, dim = c(n_psa_size, 2, 2))
for(s in 1:n_psa_size){
v_params <- m_params[s, ]
m_costs_effects[s, , ] <- do.call(calculate_costs_effects,
v_params[names(formals(calculate_costs_effects))])
}
# Set the column names for the output
dimnames(m_costs_effects)[2:3] <- dimnames(
do.call(calculate_costs_effects,
v_params[names(formals(calculate_costs_effects))])
)[2:3]
# Estimate net benefit for different willingness-to-pay values
n_wtp <- 51
wtp_seq <- seq(0, 50000, length.out = n_wtp)
# Initialise the net benefit matrix
m_net_benefit <- array(NA, dim = c(n_psa_size, 2, n_wtp))
w <- 1
for(wtp in wtp_seq){
m_net_benefit[ , , w] <- calculate_net_benefit(m_costs_effects, wtp = wtp)
w <- w + 1
}
sqrt(0.03)
sqrt(0.02)
sqrt(760)
sqrt(150)
sqrt(1880)
################################################################################
#### Model Inputs from Data for the Chemotherapy Model
################################################################################
## Read Data from File
dat_side_effs_SC <- read.csv("01_data_raw/Side_Effects_SC.csv")
dat_side_effs_SC
## Total Number of Patients in Observed Data
n_patients <- nrow(dat_side_effs_SC)
n_patients
## Number of Hospitalised Patients
n_hospitalised <- sum(dat_side_effs_SC$Hosp)
n_side_effects
## Number of Patients with side effects
n_side_effects <- sum(dat_side_effs_SC$Side_Effects)
n_side_effects
## Number of Hospitalised Patients
n_hospitalised <- sum(dat_side_effs_SC$Hosp)
n_hospitalised
## Number of Patients who Died
n_died <- sum(dat_side_effs_SC$Death)
n_died
################################################################################
#### Baseline Results for Chemotherapy Model
################################################################################
### Packages
library(colorspace)
### Run the Model
source("04_analysis/01_model_run.R")
### Mean costs and effects
mean_costs_effects <- apply(m_costs_effects, c(2, 3), mean)
write.csv(mean_costs_effects, "07_tables/Mean_Costs_Effects.csv")
### Incremental Cost-Effectiveness Ratio (ICER)
ICER <- mean(m_costs_effects[, 1, 2] - m_costs_effects[, 2, 2]) /
mean(m_costs_effects[, 1, 1] - m_costs_effects[, 2, 1])
ICER
write.csv(ICER, "07_tables/ICER.csv")
### Cost-Effectiveness Acceptability Curve
colours <- rainbow_hcl(12)
m_max <- apply(m_net_benefit, c(1,3), which.max)
pdf("06_figs/CEAC.pdf")
plot(wtp_seq, apply(m_max == 2, 2, mean), type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness for Treatment 2",
main = "Cost Effectiveness Acceptability Curve")
dev.off()
### Cost-Effectiveness Acceptability Frontier
m_ceaf <- cbind(apply(m_max == 1, 2, mean), apply(m_max == 2, 2, mean))
pdf("06_figs/CEAF.pdf")
plot(wtp_seq, m_ceaf[, 2], type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness",
main = "Cost Effectiveness Acceptability Frontier")
points(wtp_seq, m_ceaf[, 1], type = "l", col = colours[7], lwd = 3)
v_optimal_treatment <- apply(apply(m_net_benefit, c(2,3), mean), 2, which.max)
v_ceaf <- vector(length = n_wtp)
for(i in 1:n_wtp){
v_ceaf[i] <- m_ceaf[i, v_optimal_treatment[i]]
}
points(wtp_seq, v_ceaf, pch = 19, cex = 0.5)
points(wtp_seq, v_ceaf, pch = 0)
legend("bottomright", c("Treatment 1", "Treatment 2", "Frontier"),
lwd = c(2, 2, NA), pch = c(NA, NA, 0),
col = c(colours[1], colours[7], "black"))
dev.off()
### Baseline willingness to pay = 20000
baseline_wtp <- which(wtp_seq == 20000)
# Average net benefit
mean_net_benefit <- apply(m_net_benefit[, , baseline_wtp], 2, mean)
mean_net_benefit
names(mean_net_benefit) <- c("Treatment 1", "Treatment 2")
write.csv(mean_net_benefit, "07_tables/Mean_Net_Benefit.csv")
# Optimal treatment
d_star <-  which.max(mean_net_benefit)
d_star
baseline_wtp
m_net_benefit[, , baseline_wtp]
mean_net_benefit
# Quantile INB
m_net_benefit[, , baseline_wtp]
# Quantile INB
apply(m_net_benefit[, , baseline_wtp], 1, diif)
# Quantile INB
apply(m_net_benefit[, , baseline_wtp], 1, diff)
# Quantile INB
quantile(apply(m_net_benefit[, , baseline_wtp], 1, diff))
# Quantile INB
quantile(apply(m_net_benefit[, , baseline_wtp], 1, diff), prob = c(0.025, 0.975))
# Quantile INB
mean_net_benefit
# INB
diff(mean_net_benefit)
### Incremental Cost-Effectiveness Ratio (ICER)
ICER <- mean(m_costs_effects[, 1, 2] - m_costs_effects[, 2, 2]) /
mean(m_costs_effects[, 1, 1] - m_costs_effects[, 2, 1])
ICER
ICER
mean_costs_effects
ICER
colours <- rainbow_hcl(12)
m_max <- apply(m_net_benefit, c(1,3), which.max)
pdf("06_figs/CEAC.pdf")
plot(wtp_seq, apply(m_max == 2, 2, mean), type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness for Treatment 2",
main = "Cost Effectiveness Acceptability Curve")
dev.off()
m_ceaf <- cbind(apply(m_max == 1, 2, mean), apply(m_max == 2, 2, mean))
pdf("06_figs/CEAF.pdf")
plot(wtp_seq, m_ceaf[, 2], type = "l", lwd = 3,
ylim = c(0,1),
col = colours[1],
xlab = "Willingness-to-pay",
ylab = "Probability of Cost Effectiveness",
main = "Cost Effectiveness Acceptability Frontier")
points(wtp_seq, m_ceaf[, 1], type = "l", col = colours[7], lwd = 3)
v_optimal_treatment <- apply(apply(m_net_benefit, c(2,3), mean), 2, which.max)
v_ceaf <- vector(length = n_wtp)
for(i in 1:n_wtp){
v_ceaf[i] <- m_ceaf[i, v_optimal_treatment[i]]
}
points(wtp_seq, v_ceaf, pch = 19, cex = 0.5)
points(wtp_seq, v_ceaf, pch = 0)
legend("bottomright", c("Treatment 1", "Treatment 2", "Frontier"),
lwd = c(2, 2, NA), pch = c(NA, NA, 0),
col = c(colours[1], colours[7], "black"))
dev.off()
### Baseline willingness to pay = 20000
baseline_wtp <- which(wtp_seq == 20000)
# Average net benefit
mean_net_benefit <- apply(m_net_benefit[, , baseline_wtp], 2, mean)
mean_net_benefit
names(mean_net_benefit) <- c("Treatment 1", "Treatment 2")
mean_net_benefit
mean_net_benefit / baseline_wtp
mean_net_benefit / 20000
# INB
INB <- diff(mean_net_benefit)
INB
q_INB <- quantile(apply(m_net_benefit[, , baseline_wtp], 1, diff), prob = c(0.025, 0.975))
q_INB
